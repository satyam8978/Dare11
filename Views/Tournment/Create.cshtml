
@model CricketBooking.Models.Tournments
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal  bg-white">
    <h4>venue</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
     
        <div class="row p-3">

            <div class=" col-md-3 ">
                <label class="control-label ">Locations</label>
                <div class=" col-md-3">
                    @Html.DropDownListFor(m => m.iLid, new SelectList(Model.locationList, "Value", "Text"), "Please select",
                   new
                   {
                       @class = "selectpicker",

                       data_live_search = "true"

                   })
                    @Html.ValidationMessageFor(model => model.locationList, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class=" col-md-3 ">
                <label class="control-label ">Venues</label>
                <div class=" col-md-6">
                    @Html.DropDownListFor(m => m.iVid, new SelectList(""), "Please select   ",
                   new
                   {


                       data_live_search = "true"
                   })

                </div>
            </div>
            <div class=" col-md-3">
                @Html.LabelFor(model => model.sTname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.sTname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.sTname, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class=" col-md-4">
                @Html.LabelFor(model => model.iOvers, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.iOvers, new { htmlAttributes = new { @class = " selectpicker", data_live_search = "true" } })
                    @Html.ValidationMessageFor(model => model.iOvers, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class=" col-md-4">
                @Html.LabelFor(model => model.dFee, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.dFee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.iOvers, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group  p-5 col-md-8 ">

                <input type="submit" value="Create" class="btn btn-success align-self-md-center  " />
            </div>

        </div>



</div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script src="~/Scripts/jquery-ui-1.13.0.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>

    <!-- (Optional) Latest compiled and minified JavaScript translation files -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/i18n/defaults-*.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#iLid").change(function () {
                var ilid = $(this).val();
                debugger
                $.ajax({
                    type: "post",
                    url: "/Tournment/VenuesgetByLid?iLid=" + ilid,
                    contentType: "html",
                    success: function (response) {
                        debugger
                        $("#iVid").empty();
                        $("#iVid").append(response);

                    }
                })

            })

        })
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $(".selectpicker").selectpicker({
                liveSearch: true,

            });
        });
    </script>

}

